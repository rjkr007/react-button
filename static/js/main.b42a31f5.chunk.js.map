{"version":3,"sources":["index.js"],"names":["Increment","useState","count","setCount","Button","handleClick","currentCount","style","display","padding","color","marginLeft","borderRadius","backgroundColor","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"+LAuFMA,EAAY,WAAO,IAAD,EACIC,mBAAS,GADb,mBACfC,EADe,KACRC,EADQ,KAOtB,OACE,gCACE,cAACC,EAAD,CAAQC,YANI,WACdF,GAAS,SAACG,GAAD,OAAkBA,EAAe,QAMxC,mBACEC,MAAO,CACLC,QAAS,eACTC,QAAS,GACTC,MAAO,MACPC,WAAY,IALhB,SAQGT,QAMHE,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACb,wBACEE,MAAO,CACLC,QAAS,eACTC,QAAS,EACTC,MAAO,MACPC,WAAY,IACZC,aAAc,EACdC,gBAAiB,UAEnBC,KAAK,SACLC,QAASV,EAVX,kBAgBFW,IAASC,OAAO,cAACjB,EAAD,IAAekB,SAASC,eAAe,W","file":"static/js/main.b42a31f5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// import React, { useState } from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n\n// ========================================\n\n// const sum = document.getElementById(\"sum1\");\n// let n = 0;\n// sum.addEventListener(\"click\", increment);\n\n// function increment() {\n//  //   n++;\n//   let insert = n;\n//   sum.innerHTML = `Add ${insert}`;\n// }\n\n// class H1 extends React.Component {\n//   // let n = 0;\n// increment() {\n//   let n = 0;\n//   const sum = document.getElementById(\"sum\");\n//   n++;\n//   // let insert = n;\n\n//   sum.innerHTML = `Add ${n}`;\n// }\n\n//   render() {\n//     return <button id=\"sum\" onClick={this.increment}>{'Add 0'}</button>;\n//   }\n// }\n\n// ReactDOM.render(<H1 />, document.getElementById(\"root\"));\n\n// ==========================================================================\n\n//  working code for increment counter using classes component\n\n// class Counter extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       count: 0\n//     };\n//   }\n\n//     increment() {\n//       const sum = document.getElementById(\"sum\");\n//        sum.innerHTML = `Add ${this.state.count}`;\n//     this.setState({\n//       count: this.state.count + 1\n//     });\n//   };\n\n//    render() {\n//     return (\n//    <div>\n//    <button id='sum' onClick={(e) => this.increment(e)}>Add 0</button>\n//          </div>\n//     );\n//   }\n// };\n\n// ReactDOM.render(<Counter />, document.getElementById(\"root\"));\n\n// ====================================================================================\n\n// working code for increment counter using function component\n\nconst Increment = () => {\n  const [count, setCount] = useState(0);\n\n  const counter = () => {\n    setCount((currentCount) => currentCount + 1);\n  };\n\n  return (\n    <div>\n      <Button handleClick={counter} />\n      <p\n        style={{\n          display: \"inline-block\",\n          padding: 10,\n          color: \"red\",\n          marginLeft: 50,\n        }}\n      >\n        {count}\n      </p>\n    </div>\n  );\n};\n\nconst Button = ({ handleClick }) => (\n  <button\n    style={{\n      display: \"inline-block\",\n      padding: 5,\n      color: \"red\",\n      marginLeft: 500,\n      borderRadius: 5,\n      backgroundColor: \"yellow\",\n    }}\n    type=\"button\"\n    onClick={handleClick}\n  >\n    Add\n  </button>\n);\n\nReactDOM.render(<Increment />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}